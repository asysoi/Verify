<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context.xsd 
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc.xsd 
		http://www.springframework.org/schema/security 
		http://www.springframework.org/schema/security/spring-security.xsd 
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!-- DJ autoscan configuration --> 
 	<context:component-scan base-package="cci" />
  	<mvc:annotation-driven/>

    <mvc:interceptors>
      <bean class="cci.web.controller.LogInterceptor"/>
    </mvc:interceptors>
     
    <!--  View resolver config JSP standard resolver --> 
	<bean id="viewResolver"
	      class="org.springframework.web.servlet.view.InternalResourceViewResolver" >
          <property name="prefix">
              <value>/WEB-INF/jsp/</value>
           </property>
          <property name="suffix">
             <value>.jsp</value>
          </property>
    </bean>

	<!-- TRANSACTION support transactional handling --> 
	<!-- Enable Annotation based Declarative Transaction Management -->
	<tx:annotation-driven proxy-target-class="true"
		transaction-manager="transactionManager" />

	<!-- Creating TransactionManager Bean, since JDBC we are creating of type 	DataSourceTransactionManager -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<!-- TRANSACTION  -->

    <!--  REST Controller handling configuration -->
    <!--  JSON media Converter -->
	<bean id="jsonConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
        <property name="prefixJson" value="false"/>
        <property name="supportedMediaTypes" value="application/json"/>
    </bean>
    
    <!--  XML media converter -->
    <bean id="xmlMessageConverter" class="org.springframework.http.converter.xml.Jaxb2RootElementHttpMessageConverter">
         <property name="supportedMediaTypes" value="application/xml"/>
    </bean>
    
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
       <property name="messageConverters">
		<list>
			<ref bean="jsonConverter"/>
			<ref bean="xmlMessageConverter"/>
		</list>
		</property>
	</bean>
    <!--  REST Controller handling configuration -->
    
    <!--  DataBase configuration -->     
    <bean id="certificateDAO" class="cci.repository.cert.JDBCCertificateDAO">
        <property name="dataSource" ref="dataSource"/>
    </bean>

   
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="oracle.jdbc.OracleDriver"/>
        <property name="url" value="jdbc:oracle:thin:@//192.168.0.46:1521/pdborcl"/>
        <property name="username" value="beltpp"/>
        <property name="password" value="123456"/>
    </bean>

   <!-- Database OwnCertificates -->
    <bean id="owncertificateDAO" class="cci.repository.owncert.JDBCOwnCertificateDAO">
        <property name="dataSource" ref="dataSourceOwn"/>
    </bean>
    
 
    <bean id="dataSourceOwn" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://localhost:3306/owncert?useServerPrepStmts=false&amp;rewriteBatchedStatements=true&amp;useUnicode=true&amp;characterEncoding=UTF-8&amp;autoReconnect=true&amp;"/>
        <property name="username" value="cert"/>
        <property name="password" value="123456"/>
        <property name="validationQuery" value="SELECT 1"/>
        <!--  property name="tomcat.validation-query-timeout" value="5000"/>
        <property name="tomcat.test-on-connect" value="true"/>
        <property name="tomcat.test-on-borrow" value="true"/ -->
    </bean>
       
   
 <!-- Security configuration  -->
 <security:http auto-config="true" use-expressions="true">
	<security:access-denied-handler error-page="/403"/>
    <security:intercept-url pattern="/resources/**" access="permitAll" requires-channel="https"/> 
    <security:intercept-url pattern="/check.**" access="permitAll" requires-channel="https"/>
    <security:intercept-url pattern="/**" access="permitAll" requires-channel="https"/>
    <security:http-basic/> 
 </security:http>
 
 <security:authentication-manager>
   <security:authentication-provider>
	  <security:jdbc-user-service data-source-ref="dataSource"
		  users-by-username-query=
		    "select username, password, enabled from users where username=?"
		  authorities-by-username-query=
		    "select username, authority from authorities where username =?  " />
   </security:authentication-provider>
 </security:authentication-manager>
    
</beans>